const protocol="https:"===window.location.protocol?"wss":"ws",port="https:"===window.location.protocol?"":":81";let gateway=`${protocol}://${window.location.hostname}${port}/ws`,websocket;function initWebSocket(){(websocket=new WebSocket(gateway)).binaryType="arraybuffer",websocket.onclose=onClose,websocket.onmessage=onMessage}const canvas=document.getElementById("canvas"),guide=document.getElementById("guide"),clearButton=document.getElementById("clearButton"),brushSizeSelector=document.getElementById("brush-select"),drawingContext=canvas.getContext("2d"),eraserToggle=document.getElementById("eraserToggleCheckbox");canvas.width=896,canvas.height=448;let physicalDisplayWidth=128,physicalDisplayHeight=64;const canvasMultiplier=7;let scaleFactor=1,horizontalCellCount=physicalDisplayWidth/scaleFactor,verticalCellCount=physicalDisplayHeight/scaleFactor,cellSideLength=canvas.width/horizontalCellCount,lastCellX=-1,lastCellY=-1,eraserOn=!1,eraserStateChanged=!1,isDrawing=!1;function onClose(e){console.log("Connection closed"),setTimeout(initWebSocket,2e3)}function onMessage(e){if("string"==typeof e.data){let t=JSON.parse(e.data);if(t.clearFlag)drawingContext.fillStyle="#242526",drawingContext.fillRect(0,0,canvas.width,canvas.height);else{t.color?drawingContext.fillStyle="#FFFFFF":drawingContext.fillStyle="#242526";let l=7*t.x,a=7*t.y,n=canvas.width/(physicalDisplayWidth/t.cellSize);drawingContext.fillRect(l,a,n,n)}}else if(e.data instanceof ArrayBuffer){let o=new Uint8Array(e.data);drawingContext.fillStyle="#FFFFFF";for(let i=0;i<physicalDisplayHeight;i++)for(let s=0;s<physicalDisplayWidth;s++){let c=Math.floor((i*physicalDisplayWidth+s)/8),r=7-(i*physicalDisplayWidth+s)%8;o[c]>>r&1&&drawingContext.fillRect(7*s,7*i,7,7)}}}function setupGridGuides(){let e=guide.querySelectorAll("div");e.forEach(e=>e.remove()),guide.style.width=`${canvas.width}px`,guide.style.height=`${canvas.height}px`,guide.style.gridTemplateColumns=`repeat(${horizontalCellCount}, 1fr)`,guide.style.gridTemplateRows=`repeat(${verticalCellCount}, 1fr)`;for(let t=0;t<horizontalCellCount*verticalCellCount;t++)guide.insertAdjacentHTML("beforeend","<div></div>")}function fillCell(e,t){let l={clearFlag:0,color:1,x:Math.floor(e/7),y:Math.floor(t/7),cellSize:scaleFactor};eraserOn?(drawingContext.fillStyle="#242526",l.color=0):drawingContext.fillStyle="#FFFFFF";try{websocket.send(JSON.stringify(l))}catch(a){console.log(a)}drawingContext.fillRect(e,t,cellSideLength,cellSideLength)}function mouseMoved(e){let t=canvas.getBoundingClientRect(),l=e.clientX-t.left,a=e.clientY-t.top;inputMoved(l,a)}function mouseDown(e){isDrawing=!0,mouseMoved(e)}function mouseUp(e){isDrawing=!1}function touchMoved(e){let t=canvas.getBoundingClientRect(),l=e.touches[0].clientX-t.left,a=e.touches[0].clientY-t.top;inputMoved(l,a)}function touchStart(e){e.preventDefault(),isDrawing=!0,touchMoved(e)}function inputMoved(e,t){if(isDrawing){let l=Math.floor(e/cellSideLength)*cellSideLength,a=Math.floor(t/cellSideLength)*cellSideLength;(l!=lastCellX||a!=lastCellY||eraserStateChanged)&&(eraserStateChanged=!1,fillCell(l,a),lastCellX=l,lastCellY=a)}}function clearCanvas(){let e=confirm("Are you sure you wish to clear the canvas?");if(e){drawingContext.fillStyle="#242526",drawingContext.fillRect(0,0,canvas.width,canvas.height);try{websocket.send(JSON.stringify({clearFlag:1}))}catch(t){console.log(t)}}}function brushChanged(e){horizontalCellCount=128/(scaleFactor=parseInt(e.target.value)),verticalCellCount=64/scaleFactor,cellSideLength=canvas.width/horizontalCellCount,setupGridGuides()}function eraserToggled(e){eraserOn=!eraserOn,eraserStateChanged=!0}drawingContext.fillStyle="#242526",drawingContext.fillRect(0,0,canvas.width,canvas.height),setupGridGuides(),initWebSocket(),canvas.addEventListener("touchstart",touchStart),canvas.addEventListener("touchend",mouseUp),canvas.addEventListener("touchcancel",mouseUp),canvas.addEventListener("touchmove",touchMoved),canvas.addEventListener("mousemove",mouseMoved),canvas.addEventListener("mousedown",mouseDown),canvas.addEventListener("mouseup",mouseUp),canvas.addEventListener("mouseout",mouseUp),brushSizeSelector.addEventListener("change",brushChanged),eraserToggle.addEventListener("change",eraserToggled),clearButton.addEventListener("click",clearCanvas);